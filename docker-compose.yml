version: '3.8'

services:
  frontend:
    image: nginx:1.17-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./frontEnd/dist/front-end:/usr/share/nginx/html
      - ./certbot/www/:/var/www/certbot/:ro
      - ./certbot/conf/live/lhhrm.xyz/fullchain.pem:/etc/nginx/ssl/live/lhhrm.xyz/fullchain.pem
      - ./certbot/conf/live/lhhrm.xyz/privkey.pem:/etc/nginx/ssl/live/lhhrm.xyz/privkey.pem
    depends_on:
      - backend
    restart: unless-stopped

  backend:
    image: backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    depends_on:
      - db
    extra_hosts:
      - "host.docker.internal:host-gateway"

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

  db:
    image: postgres:14-alpine
    hostname: db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=survey_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge
    name: app-network

volumes:
  postgres_data: 