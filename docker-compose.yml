version: '3.8'

services:

  webserver:
    image: nginx:1.17-alpine
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped
    volumes:
      - ./config/domain.conf:/etc/nginx/conf.d/domain.conf:ro
      - ./frontend/dist/front-end:/usr/share/nginx/html
      - ./certbot/www/:/var/www/certbot/:ro
      - ./certbot/conf/live/lhhrm.xyz/fullchain.pem:/etc/nginx/ssl/live/lhhrm.xyz/fullchain.pem
      - ./certbot/conf/live/lhhrm.xyz/privkey.pem:/etc/nginx/ssl/live/lhhrm.xyz/privkey.pem 
    networks:
      - survey-network

  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   container_name: survey-frontend
  #   restart: always
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./frontend:/app
  #     - ./certbot/conf:/etc/letsencrypt
  #     - ./certbot/www:/var/www/certbot
  #   depends_on:
  #     - backend
  #   networks:
  #     - survey-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: survey-backend
    restart: always
    env_file:
      - ./backend/.env
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DB_HOST=db
      - DB_PORT=5432
    depends_on:
      db:
        condition: service_healthy
    networks:
      - survey-network

  db:
    image: postgres:15-alpine
    container_name: survey-db
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=survey_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - survey-network

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
    networks:
      - survey-network

volumes:
  postgres_data:

networks:
  survey-network:
    driver: bridge 